

[tool.poetry]
name = "mcp-streamable-http"
version = "1.0.0"
description = "A streamable HTTP server using Model Context Protocol"
authors = ["Your Name <your.email@example.com>"]
[[tool.poetry.source]]
name = "custom-registry"
url = "mcp-foundry-b2fchbbbezhchhaf.eastus2-01.azurewebsites.net"
[tool.poetry.dependencies]
python = "^3.9"
flask = "*"
requests = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"











[project]
name = "mcp-foundry"
version = "0.1.0"
description = "MCP Server for Azure AI Foundry (experimental)"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "mcp>=1.8.0",
    "requests>=2.32.3",
    "azure-mgmt-cognitiveservices>=13.0.0",
    "azure-identity>=1.0",
    "jinja2~=3.0",
    "azure-search-documents>=11.5.2",
    "azure-cli>=2.60.0",
    "azure-ai-evaluation>=1.9.0",
    "azure-ai-projects>=1.0.0b11"
]

[dependency-groups]
test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
]
[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"  # or "module", "session" based on my use case
pythonpath = ["src"]

[project.scripts]
run-azure-ai-foundry-mcp = "mcp_foundry.__main__:main"
